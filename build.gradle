plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id 'application'
    id("com.expediagroup.graphql") version '6.2.5'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.20'
}

group = 'io.spixy.imageaggregator'
version = '0.1-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation 'com.google.code.gson:gson:2.10'
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'
    implementation 'com.charleskorn.kaml:kaml:0.49.0'

    implementation("com.expediagroup:graphql-kotlin-spring-client:6.2.5")

    implementation 'io.github.microutils:kotlin-logging-jvm:3.0.2'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.4'
    implementation 'ch.qos.logback:logback-classic:1.4.4'

    implementation("io.ktor:ktor-server-core:2.1.2")
    implementation("io.ktor:ktor-server-netty:2.1.2")
    implementation "io.ktor:ktor-server-mustache:2.1.2"
    implementation 'io.ktor:ktor-server-core-jvm:2.1.2'
    implementation 'io.ktor:ktor-server-mustache-jvm:2.1.2'
    implementation 'io.ktor:ktor-server-call-logging-jvm:2.1.2'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

application {
    mainClassName = 'io.spixy.imageaggregator.MainKt'
}

graphql {
    client {
        packageName = "io.spixy.imageaggregator.generated"
        schemaFile = file("$projectDir/src/main/resources/schema.graphql")
        queryFileDirectory = "${project.projectDir}/src/main/resources/queries"
    }
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'io.spixy.imageaggregator.MainKt'
    }
    baseName = 'all-in-one-jar'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}